@using Eagle.Core.Pagination
@using Eagle.Core.Pagination.Extension
@model IPagedList<Eagle.Services.Dtos.Business.Personnel.EmployeeInfoDetail>

<div class="panel panel-default search-form-panel">
    <div class="panel-heading">
        <h5>@Html.Raw(LanguageResource.EmployeeList)</h5>
    </div>
    <div class="panel-body">
        <div class="table-responsive">
            <table id="dataTable" class="dataTable table table-bordered table-condensed table-hover table-striped tablesorter sortableTable">
                <thead>
                    <tr>
                        <th class="text-center">
                            @LanguageResource.SequenceNo
                        </th>
                        <th>
                            @LanguageResource.FullName
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FirstOrDefault().EmployeeNo)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FirstOrDefault().Contact.Mobile)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FirstOrDefault().Contact.Email)
                        </th>
                        <th class="text-center">
                            @Html.DisplayNameFor(model => model.FirstOrDefault().Status)
                        </th>
                        <th class="table-actions text_center no-sort"></th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Any())
                    {
                        int i = 0;
                        foreach (var item in Model)
                        {
                            int index = i + 1;
                            <tr>
                                <td class="text-center">
                                    @index
                                </td>
                                <td data-code="@item.EmployeeId">
                                   @string.Format("{0} {1}", item.Contact.FirstName, item.Contact.LastName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.EmployeeNo)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Contact.Mobile)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Contact.Email)
                                </td>
                                <td class="text-center">
                                    @Html.RadioButtonSwitchEnumFor(modelItem => item.Status)
                                </td>
                                <td class="table-actions text-center center no-sort">
                                    <a data-id="@item.EmployeeId"  data-url='@Url.Action("GetEmployeeDetail", "Contract")' title="@Html.Raw(LanguageResource.Choose)" class="btn btn-small btn-primary getEmployeeDetail"><span class="glyphicon glyphicon-check"></span></a>
                                </td>
                            </tr>
                            i++;
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="7" class="text-center">@LanguageResource.NoRecordFound</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="panel-footer">
        @if (Model != null && Model.Any())
        {
            <div class="datagrid-pager row">
                <div class="datagrid-pagination pull-right text-right">
                    @Html.PagedListPager(Model, page => Url.Action("SearchEmployee", "Contract", new { page, sourceEvent = "Result" }),
                PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions
                {
                    MaximumPageNumbersToDisplay = 10,
                    DisplayPageCountAndCurrentLocation = true,
                    PageCountAndCurrentLocationFormat = LanguageResource.PageCountAndCurrentLocationFormat,
                    DisplayItemSliceAndTotal = true,
                    ItemSliceAndTotalFormat = LanguageResource.ItemSliceAndTotalFormat
                }, new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "search-result" }))
                </div>
            </div>
        }
    </div>
</div>