@{
    ViewBag.Title = LanguageResource.EditMediaPlayList;
}

@using Eagle.Core.Settings
@model Eagle.Services.Dtos.Contents.Media.MediaPlayListEditEntry

<div class="panel panel-default">
    @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", id = "frmEditMediaPlayList", name = "frmEditMediaPlayList", autocomplete = "off", @class = "form-horizontal" }))
    {
        <div class="panel-heading text-bold">
            <div class='page-header margin-top-5 margin-bottom-0'>
                <div class='btn-toolbar pull-right'>
                    <div class='btn-group'>
                        <button type="button" class="btn btn-default load-back-form" onclick="location.href = '@Url.Action("Index", "MediaPlayList")'">
                            <span class="glyphicon glyphicon-backward"></span> @LanguageResource.Back
                        </button>
                        <input type="button" class="btn btn-default reset btnReset" data-mode="edit" data-form="frmEditMediaPlayList" data-id="@Model.PlayListId" data-url='@Url.Action("Edit", "MediaPlayList")' value="@LanguageResource.Reset"/>
                        <input type="button" class="btn btn-primary edit editMediaPlayList" data-mode="edit" data-form="frmEditMediaPlayList" data-url='@Url.Action("Edit", "MediaPlayList")' value="@LanguageResource.Save"/>
                    </div>
                </div>
                <h4><span class="glyphicon glyphicon-star"></span> @LanguageResource.EditMediaPlayList</h4>
            </div>
        </div>

        <div class="panel-body padding-top-0">
            <div id="formMessage" class="form-message">
                @Html.Partial("_MessagePartial")
                @Html.ValidationSummary(false, "", new { @class = "text-danger" })
            </div>

            <div id="formBody" class="form-horizontal">
                <div class="form-container">
                    <div class="form-lead">@Html.Raw(LanguageResource.RequiredFill)</div>
                    <div class="form-body-container">
                        <div class="form-horizontal">
                            <div class="form-group">
                                @Html.RequiredLabelFor(model => model.TypeId, new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.DropDownListFor(model => model.TypeId, null, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.TypeId)
                                </div>
                                @Html.LabelFor(model => model.TopicId, new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    <input id="TopicId" name="TopicId" value="@Model.TopicId" data-url='@Url.Action("GetMediaTopicSelectTree", "MediaAlbum")' class="easyui-combotree form-control cbxTopicTree" style="width: 99%;">
                                    @Html.ValidationMessageFor(model => model.TopicId)
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.PlayListName, new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    @Html.TextBoxFor(model => model.PlayListName, new { @class = "form-control", required = "required" })
                                    @Html.ValidationMessageFor(model => model.PlayListName)

                                    @Html.HiddenFor(model => model.PlayListId)
                                    @Html.ValidationMessageFor(model => model.PlayListId)
                                </div>
                                @Html.Label("Photo", LanguageResource.Photo, new { @class = "control-label col-md-2" })
                                <div class="col-md-4">
                                    <div class="file-container">
                                        <div class="input-group input-group-sm">
                                            <input type="file" id="FileUpload" name="FileUpload" accept="image/gif, image/jpg, image/jpeg, image/png, image/gif" class="btn btn-default form-control"/>
                                            <span class="input-group-addon resetPhoto">
                                                <span class="glyphicon glyphicon-remove-sign"></span>
                                            </span>
                                        </div>
                                        @Html.HiddenFor(model => model.FrontImage)
                                        @Html.HiddenFor(model => model.MainImage)
                                        @Html.ValidationMessageFor(model => model.FrontImage)
                                        <div id="image-holder">
                                            @if (!string.IsNullOrEmpty(Model.FrontImageUrl))
                                            {
                                                <img src='@Model.FrontImageUrl' class="thumb-image" width='100' height='100' />
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.Description, new { rows = 6, columns = 40, maxlength = 4000, @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Description)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Status, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <div class="checkbox">
                                        @Html.RadioButtonSwitchEnumFor(model => model.Status)
                                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>

        <div class="panel-footer">
            <div class="row">
                <div class='btn-toolbar pull-right'>
                    <div class='btn-group'>
                        <button type="button" class="btn btn-default load-back-form" onclick="location.href = '@Url.Action("Index", "MediaPlayList")'">
                            <span class="glyphicon glyphicon-backward"></span> @LanguageResource.Back
                        </button>
                        <input type="button" class="btn btn-default reset btnReset" data-mode="edit" data-form="frmEditMediaPlayList" data-id="@Model.PlayListId" data-url='@Url.Action("Edit", "MediaPlayList")' value="@LanguageResource.Reset"/>
                        <input type="button" class="btn btn-primary edit editMediaPlayList" data-mode="edit" data-form="frmEditMediaPlayList" data-id="@Model.PlayListId" data-url='@Url.Action("Edit", "MediaPlayList")' value="@LanguageResource.Save"/>
                    </div>
                </div>
            </div>
        </div>
    }
</div>