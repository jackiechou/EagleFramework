@{
    ViewBag.Title = LanguageResource.EditNews;
    Layout = ThemeViewEngine.AdminFullMainLayout;
}

@using Eagle.Core.Configuration
@using Eagle.Core.HtmlHelper
@using Eagle.Services.Skins
@model Eagle.Services.Dtos.Contents.Articles.NewsEditEntry

<div id="MainContainer" class="box-container">
    <div class="body-container">
        <div id="bodyContent" class="row">
            @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "frmNews", name = "frmNews", @class = "form-horizontal", enctype = "multipart/form-data" }))
            {
                <div id="HeaderContainer" class="heading">
                    <div class="row">
                        <div class="col-md-6">
                            <h4>@LanguageResource.EditNews</h4>
                        </div>
                        <div class="col-md-6">
                            <div class='btn-toolbar pull-right'>
                                <button type="button" class="btn btn-default back-home" onclick="location.href = '@Url.Action("Index", "News")'">
                                    <span class="glyphicon glyphicon-backward"></span> @LanguageResource.Back
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="BodyContainer">
                    <div class="form-horizontal">
                        <div class="row">
                            <div id="LeftContent" class="col-md-3">
                                <div class="panel panel-primary">
                                    <div class="panel-heading">
                                        @Html.LabelFor(model => model.CategoryId, new { @class = "control-label" })
                                    </div>
                                    <div class="panel-body">
                                        <div class="container-fluid">
                                            <div class="padding-10">
                                                <ul id="tree"></ul>
                                                @Html.TextBoxFor(model => model.CategoryId, new { @id = "CategoryId", @style = "position:absolute; top:-9999px; left:-9999px" })
                                                @Html.ValidationMessageFor(model => model.CategoryId)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="RightContent" class="col-md-9 right-content">
                                <div class="panel panel-primary">
                                    <div class="panel-heading text-bold">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <h6>@LanguageResource.Create</h6>
                                            </div>
                                            <div class="col-md-6">
                                                <div class='btn-toolbar pull-right'>
                                                    <div class='btn-group'>
                                                        <input type="button" class="btn btn-default reset btnReset" data-mode="edit" data-form="frmNews" data-url='@Url.Action("Edit", "News")' value="@LanguageResource.Reset" />
                                                        <input type="button" class="btn btn-primary save edit editNews" data-mode="edit" data-form="frmNews" data-url='@Url.Action("Edit", "News")' value="@LanguageResource.Save" />
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="panel-body">
                                        <div id="formMessage" class="form-message">
                                            @Html.AntiForgeryToken()
                                            @Html.Partial("_MessagePartial")
                                            @Html.ValidationSummary(false, "", new { @class = "alert alert-danger" })
                                        </div>
                                        <div id="formBody" class="container-fluid">
                                            <div class="form-container">
                                                <div class="form-lead">@Html.Raw(LanguageResource.RequiredFill)</div>
                                                <div class="form-body-container">
                                                    <div class="form-horizontal">

                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.Title, new { @class = "control-label col-md-2" })
                                                            <div class="col-md-10">
                                                                @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
                                                                @Html.ValidationMessageFor(model => model.Title, "*", new { @class = "text-danger" })

                                                                @Html.TextBoxFor(model => model.NewsId, new { @style = "position:absolute; top:-9999px; left:-9999px" })
                                                                @Html.ValidationMessageFor(model => model.NewsId)
                                                            </div>
                                                        </div>

                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.Headline, new { @class = "control-label col-md-2" })
                                                            <div class="col-md-10">
                                                                @Html.TextBoxFor(model => model.Headline, new { @class = "form-control" })
                                                                @Html.ValidationMessageFor(model => model.Headline, "*", new { @class = "text-danger" })
                                                            </div>
                                                        </div>

                                                        <div class="form-group">
                                                            @Html.Label(LanguageResource.Photo, new { @class = "control-label col-md-2" })
                                                            <div class="col-md-10">
                                                                <div class="file-container">
                                                                    <div class="row">
                                                                        <div class="col-md-8 no-padding-left">
                                                                            <input type="file" id="File" name="File" class="btn btn-default form-control" />
                                                                        </div>
                                                                        <div class="col-md-4 no-padding-left">
                                                                            <input type="button" class="btn btn-warning resetImage" value="@LanguageResource.ResetImage" />
                                                                        </div>
                                                                    </div>
                                                                    <div id="image-holder"> </div>
                                                                    <div id="image-container" class="image-container">
                                                                        @if (@Model.DocumentInfos != null && @Model.DocumentInfos.Any())
                                                                        {
                                                                        @Html.ImageByFileId("Photo", Model.FrontImage, Model.DocumentInfos[0].FileUrl, Model.DocumentInfos[0].FileName, new { width = "50", height = "50", @class = "thumb-image" })
                                                                        }
                                                                    </div>

                                                                </div>
                                                            </div>
                                                        </div>

                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.NavigateUrl, new { @class = "control-label col-md-2" })
                                                            <div class="col-md-10">
                                                                @Html.TextBoxFor(model => model.NavigateUrl, new { @class = "form-control" })
                                                                @Html.ValidationMessageFor(model => model.NavigateUrl, "*", new { @class = "text-danger" })
                                                            </div>
                                                        </div>

                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.MainText, new { @class = "control-label col-md-2" })
                                                            <div class="col-md-10">
                                                                @Html.TextAreaFor(model => model.MainText, new { @id = "MainText", @style = "height:440px" })
                                                                @Html.ValidationMessageFor(model => model.MainText, "*", new { @class = "text-danger" })
                                                            </div>
                                                        </div>


                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.Summary, new { @class = "control-label col-md-2" })
                                                            <div class="col-md-10">
                                                                @Html.TextAreaFor(model => model.Summary, new { @class = "form-control" })
                                                                @Html.ValidationMessageFor(model => model.Summary, "*", new { @class = "text-danger" })
                                                            </div>
                                                        </div>

                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.Authors, new { @class = "control-label col-md-2" })
                                                            <div class="col-md-10">
                                                                @Html.TextBoxFor(model => model.Authors, new { @class = "form-control" })
                                                                @Html.ValidationMessageFor(model => model.Authors, "*", new { @class = "text-danger" })
                                                            </div>
                                                        </div>

                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.Source, new { @class = "control-label col-md-2" })
                                                            <div class="col-md-10">
                                                                @Html.TextBoxFor(model => model.Source, new { @class = "form-control" })
                                                                @Html.ValidationMessageFor(model => model.Source, "*", new { @class = "text-danger" })
                                                            </div>
                                                        </div>


                                                        <div class="form-group">
                                                            @Html.LabelFor(model => model.PostedDate, new { @class = "control-label col-md-2" })
                                                            <div class="col-md-4">
                                                                @Html.DatePickerWithIconFor(model => model.PostedDate)
                                                                @Html.ValidationMessageFor(model => model.PostedDate, "*", new { @class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="panel-footer">
                                        <div class="row">
                                            <div class="bottom-toolbar">
                                                <input type="button" class="btn btn-default reset btnReset" data-mode="edit" data-form="frmNews" data-url='@Url.Action("Edit", "News")' value="@LanguageResource.Reset" />
                                                <input type="button" class="btn btn-primary save edit editNews" data-mode="edit" data-form="frmNews" data-url='@Url.Action("Edit", "News")' value="@LanguageResource.Save" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            }
        </div>
    </div>
</div>
@section Scripts{
    <script type="text/javascript">
        //links
        var baseUrl = location.protocol + '//' + location.hostname + (location.port ? ':' + location.port : '');
        window.GetNewsCategoryTreeUrl = '@Url.Action("GetNewsCategoryTree", "NewsCategory")';
        window.CreateNewsUrl = '@Url.Action("Create", "News")';
        window.EditNewsUrl = '@Url.Action("Edit", "News")';
        window.SearchNewsUrl = '@Url.Action("Search", "News")';
        window.IndexNewsUrl = '@Url.Action("Index", "News")';
        window.DeleteNewsUrl = '@Url.Action("Delete", "News")';
        window.UpdateNewsListOrderUrl = '@Url.Action("UpdateNewsListOrder", "News")';
        //window.UploadNewsImageUrl = baseUrl + '/Handlers/UploadFile.ashx';

        window.ReadImageBrowserUrl = '@Url.Action("Read", "ImageBrowser")';
        window.CreateImageBrowserDirectoryUrl = '@Url.Action("CreateDirectory", "ImageBrowser")';
        window.DestroyImageBrowserUrl = '@Url.Action("Destroy", "ImageBrowser")';
        window.ThumbnailImageBrowserUrl = '@Url.Action("Thumbnail", "ImageBrowser")';
        @*window.ImageUrl = '@Url.Action("Image", "ImageBrowser")' + "?path={0}";*@
        window.UploadImageBrowserUrl = '@Url.Action("Upload", "ImageBrowser")';
        window.UploadNewsImageFolder = '@Url.Content(GlobalSettings.NewsUploadImagePath)';

        window.ReadFileBrowserUrl = '@Url.Action("Read", "FileBrowser")';
        window.CreateFileBrowserDirectoryUrl = '@Url.Action("CreateDirectory", "FileBrowser")';
        window.DestroyFileBrowserUrl = '@Url.Action("Destroy", "FileBrowser")';
        window.ThumbnailFileBrowserUrl = '@Url.Action("Thumbnail", "FileBrowser")';
        @*window.FileUrl = '@Url.Action("File", "FileBrowser")' + "?fileName={0}";*@
        window.UploadFileBrowserUrl = '@Url.Action("Upload", "FileBrowser")';
        window.UploadNewsFileFolder = '@Url.Content(GlobalSettings.NewsUploadDocumentPath)';
    </script>

    <!-- tree -->
    <link href="@Url.Content("~/Scripts/plugins/easyui/themes/bootstrap/easyui.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Scripts/plugins/easyui/themes/icon.css")" rel="stylesheet" />
    <script src="@Url.Content("~/Scripts/plugins/easyui/jquery.easyui.min.js")"></script>
    <link href="@Url.Content("~/Scripts/plugins/kendo/styles/kendo.common.min.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Scripts/plugins/kendo/styles/kendo.default.min.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Scripts/plugins/kendo/styles/kendo.default.mobile.min.css")" rel="stylesheet" />
    <script src="@Url.Content("~/Scripts/plugins/kendo/js/kendo.all.min.js")"></script>
    <script src="@Url.Content("~/Scripts/app/modules/news.js")"></script>
}

