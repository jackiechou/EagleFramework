@using Eagle.Core.Pagination
@using Eagle.Core.Pagination.Extension
@using Eagle.Core.Settings
@model IPagedList<Eagle.Services.Dtos.Services.Booking.ServicePackInfoDetail>

<div class="panel panel-default search-form-panel">
    <div id="formMessage" class="form-message">
        @Html.AntiForgeryToken()
        @Html.Partial("_MessagePartial")
        @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })
    </div>
    <div class="panel-heading">
        <div class="row">
            <div class="col-md-10">
                <h5>@Html.Raw(LanguageResource.List)</h5>
            </div>
            <div class="col-md-2 text-right">
                <div class="btn-group" data-toggle="buttons">
                    <button type="button" class="btn btn-default back-form" onclick="location.href = '@Url.Action("Index", "ServicePack")'">
                        <span class="glyphicon glyphicon-home"></span>
                    </button>
                </div>
            </div>
        </div>
    </div>
    <div class="panel-body">
        <div class="table-responsive">
            <table id="dataTable" class="dataTable table table-bordered table-condensed table-hover table-striped tablesorter sortableTable">
                <thead>
                <tr>
                    <th class="text-center">
                        @LanguageResource.SequenceNo
                    </th>
                    <th class="text-center">
                        @Html.DisplayNameFor(model => model.FirstOrDefault().PackageName)
                    </th>
                    <th class="text-center">
                        @Html.DisplayNameFor(model => model.FirstOrDefault().Duration.DurationName)
                    </th>
                    <th class="text-center">
                        @Html.DisplayNameFor(model => model.FirstOrDefault().TotalFee)
                    </th>
                    <th class="text-center">
                        @Html.DisplayNameFor(model => model.FirstOrDefault().Status)
                    </th>
                    <th class="table-actions text_center no-sort">@LanguageResource.Actions</th>
                </tr>
                </thead>
                <tbody>
                @if (Model.Any())
                {
                    int i = 0;
                    foreach (var item in Model)
                    {
                        int index = i + 1;
                        <tr>
                            <td class="text-center">
                                @index
                            </td>
                            <td data-code="@item.PackageId">
                                @Html.DisplayFor(modelItem => item.PackageName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Duration.DurationName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TotalFee)
                            </td>
                            <td class="text-center">
                                <div class="inner-center">
                                    <div class="checkbox-slider--a">
                                        <label>
                                            @{
                                                if (item.Status == ServicePackStatus.Active)
                                                {
                                                    <input type="checkbox" id="@string.Format("Status-{0}", item.PackageId)" name="IsActive-@item.PackageId" data-id="@item.PackageId" data-url='@Url.Action("UpdateStatus", "ServicePack")' data-warning="@LanguageResource.DoYouWantToContinue" class="changeStatus" checked="checked" value="true"><span></span>
                                                }
                                                else
                                                {
                                                    <input type="checkbox" id="@string.Format("Status-{0}", item.PackageId)" name="IsActive-@item.PackageId" data-id="@item.PackageId" data-url='@Url.Action("UpdateStatus", "ServicePack")' data-warning="@LanguageResource.DoYouWantToContinue" class="changeStatus" value="false"><span></span>
                                                }
                                            }
                                        </label>
                                    </div>
                                </div>
                            </td>
                            <td class="table-actions text-center center no-sort">
                                <a data-id="@item.PackageId" title="@LanguageResource.Delete" class="btn btn-small btn-warning delete deleteItem" data-container="divEdit" data-url='@Url.Action("Delete", "ServicePack")' data-warning="@LanguageResource.DoYouWantToDeleteItem"><span class="glyphicon glyphicon-align-center icon-trash"></span></a>
                                <a data-id="@item.PackageId" title="@Html.Raw(LanguageResource.Edit)" class="btn btn-small btn-primary editItem" data-container="divEdit" href='@Url.Action("Edit", "ServicePack", new {id = item.PackageId})' data-url='@Url.Action("Edit", "ServicePack")'><span class="icon-edit"></span></a>
                            </td>
                        </tr>
                        i++;
                    }
                }
                else
                {
                    <tr>
                        <td colspan="6" class="text-center">@LanguageResource.NoRecordFound</td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>
    <div class="panel-footer">
        @if (Model != null && Model.Any())
        {
            <div class="datagrid-pager row">
                <div class="datagrid-pagination pull-right text-right">
                    @Html.PagedListPager(Model, page => Url.Action("Search", "ServicePack", new {page, sourceEvent = "Result"}),
                        PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions
                        {
                            MaximumPageNumbersToDisplay = 10,
                            DisplayPageCountAndCurrentLocation = true,
                            PageCountAndCurrentLocationFormat = LanguageResource.PageCountAndCurrentLocationFormat,
                            DisplayItemSliceAndTotal = true,
                            ItemSliceAndTotalFormat = LanguageResource.ItemSliceAndTotalFormat
                        }, new AjaxOptions() {HttpMethod = "GET", UpdateTargetId = "search-result"}))
                </div>
            </div>
        }
    </div>
</div>