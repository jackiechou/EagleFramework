@using System.Globalization
@using Eagle.Common.Utilities
@using Eagle.Core.Pagination
@using Eagle.Core.Pagination.Extension
@model IPagedList<Eagle.Services.Dtos.Skins.SkinPackageBackgroundDetail>

<div class="table-responsive">
    <table id="dataTable" class="dataTable table table-bordered table-condensed table-hover table-striped tablesorter sortableTable">
        <thead>
        <tr>
            <th class="text-center">@LanguageResource.SequenceNo</th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().BackgroundName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().IsActive)
            </th>
            <th class="table-actions text-center no-sort">@LanguageResource.Actions</th>
        </tr>
        </thead>
        <tbody>
        @if (Model.Any())
        {
            int i = 0;
            foreach (var item in Model)
            {
                i++;
                <tr>
                    <td class="text-center">
                        @i
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.BackgroundName)
                    </td>
                    <td class="text-center">
                        <div class="inner-center">
                            <div class="checkbox-slider--a">
                                <label>
                                    @{
                                        if (item.IsActive)
                                        {
                                            <input type="checkbox" id="IsActive-@item.BackgroundId" name="IsActive-@item.BackgroundId" class="changeStatus" data-id="@item.BackgroundId" data-url='@Url.Action("UpdateStatus", "SkinPackageBackground")' data-warning="@LanguageResource.DoYouWantToContinue" checked="checked" value="true"><span></span>
                                        }
                                        else
                                        {
                                            <input type="checkbox" id="IsActive-@item.BackgroundId" name="IsActive-@item.BackgroundId" class="changeStatus" data-id="@item.BackgroundId" data-url='@Url.Action("UpdateStatus", "SkinPackageBackground")' data-warning="@LanguageResource.DoYouWantToContinue" value="false"><span></span>
                                        }
                                    }
                                </label>
                            </div>
                        </div>
                    </td>
                    <td class="table-actions text-center center no-sort">
                        <a data-id="@item.BackgroundId" title="@Html.Raw(LanguageResource.Edit)" class="btn btn-small btn-primary editItem" data-container="divEdit" data-url='@Url.Action("Edit", "SkinPackageBackground")'><span class="icon-edit"></span></a>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="4" class="text-center">@LanguageResource.NoRecordFound</td>
            </tr>
        }
        </tbody>
    </table>
</div>

@if (Model != null && Model.Any())
{
    <div class="datagrid-pager row">
        <div class="datagrid-pagination pull-right text-right">
            @Html.PagedListPager(Model, page => Url.Action("Search", "SkinPackageBackground", new { page, sourceEvent = "Result" }),
                PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new PagedListRenderOptions
                {
                    MaximumPageNumbersToDisplay = 10,
                    DisplayPageCountAndCurrentLocation = true,
                    PageCountAndCurrentLocationFormat = LanguageResource.PageCountAndCurrentLocationFormat,
                    DisplayItemSliceAndTotal = true,
                    ItemSliceAndTotalFormat = LanguageResource.ItemSliceAndTotalFormat
                }, new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "search-result" }))
        </div>
    </div>
}